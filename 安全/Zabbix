监控内容
    查看内存信息
    查看交换分区信息
    查看磁盘信息
    查看CPU信息
    查看网卡信息
    查看端口信息
    查看网络连接信息
cacti： 需要支持SNMP协议，强大的绘图能力
Nagios：基于Agent监控，强大的状态检查与报警机制 ，插件多，自己写监控脚本插入Nagios非常方便
Zabbix：基于多种监控机制，支持分布式监控

iostat 查看系统I/O速度

Zabbix 基于B/S模式访问查看监控情况，企业级监控服务器 
 - 数据可以写入MySQL、Oracle等数据库
 - 服务器使用LNMP实现web前端的管理
 - 监控服务器可以通过SNMP或Agent采集数据

搭建LNMP平台
   配置Nginx支持PHP动态网站，开启Nginx的各种fastcgi缓存，加速PHP脚本的执行速度
]# vim /usr/local/nginx/conf/nginx.conf
http{
… …
    fastcgi_buffers 8 16k;                       //缓存php生成的页面内容，8个16k
    fastcgi_buffer_size 32k;                     //缓存php生产的头部信息
    fastcgi_connect_timeout 300;                 //连接PHP的超时时间
    fastcgi_send_timeout 300;                    //发送请求的超时时间
    fastcgi_read_timeout 300;                    //读取请求的超时时间
location ~ \.php$ {
                root           html;
                fastcgi_pass   127.0.0.1:9000;
                fastcgi_index  index.php;
                include        fastcgi.conf;
        }

创建库，存储zabbix监控服务的配置信息和监控数据，并授权连接
]# mysql -uroot -p123456
   create database zabbixdb;
   grant all on zabbixdb.* to yaya100@"localhost" identified by "123456";

安装源码zabbix软件
rpm -ivh libevent-devel-2.0.21-4.el7.x86_64.rpm
yum -y install curl-devel
useradd zabbix
yum -y install net-snmp-devel
cd zabbix
./configure --prefix=/usr/local/zabbix --enable-server --enable-proxy --enable-agent --with-mysql=/usr/bin/mysql_config --with-net-snmp --with-libcurl  //配置zabbix软件
make install  //安装
         注L：--enable-agent 安装为本机提供客户端监控程序，为监控服务器提供一个监控切入点，监控服务器由这个监控程序来监控这台主机，这里监控服务器作为监控本机使用
对zabbix服务做初始化配置，登陆web管理页面,指定数据库用户名，密码，数据库zabbix，及数据库的ip地址
cd /root/lnmp_soft/zabbix/
cd database/
cd  mysql/
mysql -uyaya100 -p123456 zabbixdb < schema.sql
mysql -uyaya100 -p123456 zabbixdb < images.sql
mysql -uyaya100 -p123456 zabbixdb < data.sql
cd /root/lnmp_soft/zabbix/
cp -r frontends/php/ /usr/local/nginx/html/zabbix/
chmod 777 /usr/local/nginx/html/zabbix/conf

]# vim /etc/php.ini
date.timezone = Asia/Shanghai              //设置时区
max_execution_time = 300                   //最大执行时间，秒
post_max_size = 32M                        //POST数据最大容量
max_input_time = 300                       //服务器接收数据的时间限制
memory_limit = 128M                        //内存容量限制

启动zabbix服务
修改主配置文件，指定zabbix使用的数据库授权的数据库用户，密码，数据库，修改启动脚本，指定zabbix安装路径
 - 服务配置文件  vim /usr/local/zabbix/etc/zabbix_server
      38 LogFile=/tmp/zabbix_server.log
      85 # DBHost=localhost      //不指定默认本机
      95 DBName=zabbixdb    //授权的数据库
      111 DBUser=yaya100    //授权用户
      119 DBPassword=123456 //授权用户密码
 - 使用单核的启动脚本
  cp /root/lnmp_soft/zabbix-3.4.4/misc/init.d/fedora/core/* /etc/init.d/
  chmod +x /etc/init.d/zabbix_*
  vim /etc/init.d/zabbix_server
 22         BASEDIR=/usr/local/zabbix
]# /etc/init.d/zabbix_server start   //启动服务
]# ss -ntlup | grep :10051 //验证端口已经启动

zabbix软件的基本使用 (图形设置)

查看监控服务器已经监控了哪些主机
查看监控服务器支持的监控模板
查看监控信息

基本配置
1 监控本机
   在本机运行zabbix_agent服务
  vim /usr/local/zabbix/etc/zabbix_agentd.conf
    30 LogFile=/tmp/zabbix_agentd.log
    93 Server=127.0.0.1  //服务运行后允许监控自己的监控服务器,允许访问agent服务的IP地址
   134 ServerActive=127.0.0.1:10051  //指定监控服务器的IP和port号
   280 UnsafeUserParameters=1   //1：表示可以自定监控命令
 265 Include=/usr/local/zabbix/etc/zabbix_agentd.conf.d/*.conf  启动agent服务时加载这些文件

启动脚本，使用启动脚本启动程序，启动脚本在源码目录的下面，如下目录
  cd /root/lnmp_soft/zabbix-3.4.4/
  cd misc/init.d/fedora/core
  cp * /etc/init.d/
  chmod +x /etc/init.d/zabbix_agentd
  vim /etc/init.d/zabbix_agentd
    22         BASEDIR=/usr/local/zabbix  //修改zabbix的安装目录
  使用脚本启动服务
   /etc/init.d/zabbix_agentd start
   ss -ntulp | grep :10050
  web页面添加监控主机

2 监控远端主机22
 - 配置远端主机：运行zabbix_agentd服务
  yum -y install pcre-devel
  ./configure --prefix=/usr/local/zabbix --enable-agent   
  ls /usr/local/zabbix/
    bin  etc  lib  sbin  share
 
 ]# vim /usr/local/zabbix/etc/zabbix_agentd.conf
   30 LogFile=/tmp/zabbix_agentd.log  //日志文件
   93 Server=127.0.0.1,192.168.4.5  //允许这两个地址可以访问本机的zabbix_agentd服务
  134 ServerActive=192.168.4.5:10051  //监控服务器的ip地址和服务器
  280 UnsafeUserParameters=1   //1:允许自己定义监控命令
  265 Include=/usr/local/zabbix/etc/zabbix_agentd.conf.d/*.conf  //启动zabbix_agent服务时加载这些文件
创建启动脚本，启动程序
    cp misc/init.d/fedora/core/zabbix_agentd  /etc/init.d/
    chmod +x /etc/init.d/zabbix_agentd 
    sed -i '22s;/usr/local;/usr/local/zabbix;' /etc/init.d/zabbix_agentd
    sed -n '22p'  /etc/init.d/zabbix_agentd
    /etc/init.d/zabbix_agentd start
    ss -ntlup | grep :10050


 - 配置监控服务器： 添加监控新主机，并查看监控信息
  关闭22上的selinux和防火墙
  添加新监控的主机，指定主机名，群组，ip，模板:选择template OS Linux

3 自定义监控项
 - 配置被监控端 192.168.4.22
  允许自定义监控项
   vim /usr/local/zabbix/etc/zabbix_agentd.conf
     280 UnsafeUserParameters=1  // 1:允许自己定义监控命令
       265 Include=/usr/local/zabbix/etc/zabbix_agentd.conf.d/*.conf  //启动zabbix_agent服务时加载这些文件
    定义监控命令的模板vim /usr/local/zabbix/etc/zabbix_agentd.conf 
     284  #  Format: UserParameter=<key>,<shell command>
  - 定义监控命令（被监控服务器）
      vim /usr/local/zabbix/etc/zabbix_agentd.conf.d/getusers.conf
           UserParameter=get_users,wc -l /etc/passwd | awk '{print $1}'
                   注：wc -l /etc/passwd | awk '{print $1}' 该命令统计user的个数，并输出具体数字
  - 重启服务，载入配置（被监控服务器）
      /etc/init.d/zabbix_agentd stop
      /etc/init.d/zabbix_agentd start
  - 测试定义的监控命令（被监控服务器）
      /usr/local/zabbix/bin/zabbix_get -s 127.0.0.1 -p 10050 -k get_users 
             结果----> 46
 - 配置监控服务器（图形配置）
   创建监控模板  Atmp
   创建应用集    usersgroup
   创建监控项    monitor_54_users 对应命令get_users(22上创建的监控命令)
   监控主机22时调用新建的模板

4 监控报警
监控主机54系统总用户数量打与46个时报警
报警方式：发邮件  (mail -s 'xx' zabbix < /etc/hosts  //将hosts的内容发送给zabbix用户)
           收邮件 ( mail -u zabbix)

5.自动监控
 自动发现新主机
  - 创建自动发现规则
          设置以http服务为发现条件能够更快的发现需要监控的主机
  - 创建动作，并指定动作的具体操作
          以自动发现为事件源
          指定添加的主机群组，和所使用的模板
  - 在被监控的主机上运行zabbix_agentd服务（10050端口） 

6 主动监控
 - 默认zabbix采用的是被动监控，主动和被动都是对被监控端主机而言的！
被动监控：Server向Agent发起连接，发送监控key，Agent接受请求，响应监控数据。
 - 主动监控：Agent向Server发起连接，Agent请求需要检测的监控项目列表，Server响应Agent发送一个items列表，Agent确认收到监控列表，TCP连接完成，会话关闭，Agent开始周期性地收集数据。
 - 区别：Server不用每次需要数据都连接Agent，Agent会自己收集数据并处理数据，Server仅需要保存数据即可。
 - 当监控主机达到一定量级后，Zabbix服务器会越来越慢，此时，可以考虑使用主动监控，释放服务器的压力。
 - 另外，Zabbix也支持分布式监控，也是可以考虑的方案。

  主机57 运行agent程序
   - 装包
   - 修改配置文件 
   vim /usr/local/zabbix/etc/zabbix_agentd.conf
   # Server=127.0.0.1
   StartAgents=0    //被动监控时启动多个进程.设置为0，则禁止被动监控，不启动zabbix_agentd服务,只启动进程
   ServerActive=192.168.4.5      //允许哪些主机监控本机（主动模式），一定要取消127.0.0.1     
   RefreshActiveChecks=120     //默认120秒检测一次
   Hostname=host57 //告诉监控服务器，是谁发的数据信息,一定要和zabbix服务器配置的监控主机名称一致,后面设置
   :wq

   创建启动agent程序 
    /usr/local/zabbix/sbin/zabbix_agentd  --->回车直接启动
    ps -C zabbix_agentd    //查看程序成功启动
   配额哦只监控服务器4.5
   - 修改监控项的监控方式为注监控方式
      克隆已有的监控系统的模板
   - 添加监控主机57 并调用主动的监控方式
      添加监控
 

监控nginx服务状态
nginx源码安装的依赖工具
  yum -y install gcc pcre-devel openssl-devel zlib-devel       //nginx源码安装的依赖工具
  ./configure --prefix=/usr/local/nginx --user=nginx --group=nginx --with-http_stub_status_module      //状态模块
  make && make install 
vim /usr/local/nginx/conf/nginx.conf
    server {
      listen 80
      server_name  localhost;
      location /status {
            stub_status on;
        }
  }

curl -s http://192.168.4.53/status   //-s安静的输出数据，尽可能减少不必要的输出
 Active connections: 1 
 server accepts handled requests
  28 28 250      //累计连接数个数 处理的连接数的个数 请求的数量
 Reading: 0 Writing: 1 Waiting: 0 
  
  安装zabbix-agent服务，启用自定义监控项功能
   ./configure --prefix=/usr/local/zabbix --enable-agent
   make && make install
   cp /usr/local/zabbix/misc/init.d/fedora/core/zabbix_agentd /etc/init.d/
   sed -i '22;/usr/local;/usr/local/zabbix;' /etc/init.d/zabbix_agentd
    

vim /usr/local/zabbix/etc/zabbix_agentd.conf
 Include=/usr/local/zabbix/etc/zabbix_agentd.conf.d/*.conf
 UnsafeUserParameters=1
 ServerActive=192.168.4.5:10051
 Server=127.0.0.1,192.168.4.5

自定义的监控脚本
vim /tmp/nginx.sh
#!/bin/bash
case $1 in
active)
   curl -s http://127.0.0.1/status | awk '/Active/{print $NF}'
;;

waiting)
   curl -s http://127.0.0.1/status | awk '/Waiting/{print $NF}'
;;

accepts)
   curl -s http://127.0.0.1/status | awk 'NR==3{print $2}'
;;
esac

自定义监控key
如：
UserParameter=ping[*],echo $1
ping[0]， 返回的结果都是0   //中括号中的内容即为后面命令中的第一个参数
ping[aaa]， 返回的结果都是aaa

vim /usr/local/zabbix/etc/zabbix_agentd.conf.d/checknginx.conf
UserParameter=nginx_status[*],/tmp/nginx.sh $1

本机测试zabbix监控集是否配置正确,显示结果即为正确
]# /usr/local/zabbix/bin/zabbix_get -s 127.0.0.1 -p 10050 -k nginx_status[accepts]
]# /usr/local/zabbix/bin/zabbix_get -s 127.0.0.1 -p 10050 -k nginx_status[active]
]# /usr/local/zabbix/bin/zabbix_get -s 127.0.0.1 -p 10050 -k nginx_status[waiting]
// -s指定主机 -p指定agent监控程序的端口，-k 指定主机上的监控key[参数]

//zabbix图形设置时，就填写UserParameter的值nginx_status[*](括号中填写相应参数，即位监控不同的项),新创建模版，然后再创建应用集（写具体监控内容的文件夹），再在应用集里添加监控项，填写监控名，和被监控主机上自定义的键值（key）添加成功即可

